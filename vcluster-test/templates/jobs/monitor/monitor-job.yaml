apiVersion: v1
kind: Pod
metadata:
  name: {{ .Values.jobs.monitorJob.name }}
spec:
  serviceAccountName: {{ .Values.jobs.monitorJob.serviceAccount.name }}
  containers:
    - name: bash-script-container
      image: bitnami/kubectl:latest
      command:
        - sh
        - -c
        - |
          # Run the monitor.sh script with arguments from values.yaml
          touch /tmp/script-output.txt 
          touch /tmp/script-error.txt
          whoami >> /tmp/script-output.txt 2>> /tmp/script-error.txt
          ls -la /scripts >> /tmp/script-output.txt 2>> /tmp/script-error.txt
          cat /scripts/monitor.sh >> /tmp/script-output.txt 2>> /tmp/script-error.txt
          
          sudo chown 1001:root /scripts/monitor.sh >> /tmp/script-output.txt 2>> /tmp/script-error.txt
          chmod +x /scripts/monitor.sh >> /tmp/script-output.txt 2>> /tmp/script-error.txt
          /scripts/monitor.sh {{ .Values.jobs.monitorJob.script.argument }} >> /tmp/script-output.txt 2>> /tmp/script-error.txt

          # Create a new ConfigMap YAML and replace the existing ConfigMap
          kubectl create configmap {{ .Values.jobs.monitorJob.script.resultConfigMapName }} \
            --from-file=output=/tmp/script-output.txt \
            --from-file=error=/tmp/script-error.txt \
            --dry-run=client -o yaml > /tmp/configmap.yaml
          kubectl replace -f /tmp/configmap.yaml
      volumeMounts:
        - name: script-volume
          mountPath: /scripts
  restartPolicy: Never
  volumes:
    - name: script-volume
      configMap:
        name: {{ .Values.data.scriptsConfigMap.name }}
        items:
          - key: monitor.sh
            path: monitor.sh
